name: .NET

on: [push, pull_request, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      DOTNET_MULTILEVEL_LOOKUP: false
      DOTNET_INSTALL_DIR: ${{ matrix.os == 'ubuntu-latest' && '' || 'dotnet' }}
      ASPIRE_ALLOW_UNSECURED_TRANSPORT: true
      SuppressNETCoreSdkPreviewMessage: true

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --settings CodeCoverage.runsettings --verbosity normal --filter FullyQualifiedName\!~IntegrationTests

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/TestResults/*.*'

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Code Coverage Report
      run: reportgenerator -reports:**/TestResults/**/coverage.cobertura.xml -targetdir:coverage-report -reporttypes:Html

    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverage-report

    - name: Upload to Coveralls
      run: |
        curl -L https://coveralls.io/api/v1/jobs \
        -F json_file=@coverage-report/coverage.cobertura.xml \
        -F repo_token=${{ secrets.COVERALLS_REPO_TOKEN }}